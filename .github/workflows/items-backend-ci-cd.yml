name: Items Backend CI CD

on:
  # Trigger the workflow on push
  push:
    branches:
      # Push events on main branch
      - main

# The Job defines a series of steps that execute on the same runner.
jobs:

  CI:
    name: Build Items Backend
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Open Web Items Backend Directory
        working-directory: ./items-backend
        run: |
          ls -la
      # Step-1 Setup Python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name:  Virtual ENV
        uses: actions/cache@v2
        id: cache-venv # name for referring later
        with:
          path: venv # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv env && source env/bin/activate && pip install -r 'requirements.txt'
#        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions doesn't preserve the environment
        run: pytest
      - name: Create archive of dependencies
        run: |
          cd ./env/lib/python3.8/site-packages
          zip -r9 ../../../../itemsApi.zip .
      - name: Add API files to Zip file
        working-directory: ./items-backend/itemsApi
        run: |
         zip -g ../itemsApi.zip -r .
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: itemsApi
          path: itemsApi.zip
